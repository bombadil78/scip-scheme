#lang scheme
(define (append l1 l2)
  (cond ((empty? l1) l2)
        (else (cons (car l1) (append (cdr l1) l2)))
      )
  )
(define (reverse l)
  (cond ((= 1 (length l)) l)
        (else (append (reverse (cdr l)) (list (car l))))
        )
  )
(define x (list 1 2 3))
(define y (list 3 4 5))
(define z (append x y))
(reverse z)