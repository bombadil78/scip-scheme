#lang scheme
(define (pasc n)
  (define (pasc-row lst)
    (cond ((= 1 (length lst)) empty)
          (else (cons (+ (first lst) (first (rest lst))) (pasc-row (rest lst))))
          )
    )
  (define (add-zeroes lst)
    (cons 0 (reverse (cons 0 (reverse lst))))
    )
  (define (pasc-compute lst n)
    (cond ((= 0 n) lst)
          (else (pasc-compute (pasc-row (add-zeroes lst)) (- n 1)))
          )
    )
  (pasc-compute (list 1) n)
  ) 
(pasc 0)
(pasc 1)
(pasc 2)
(pasc 3)
(pasc 4)
(pasc 5)
(pasc 6)
(pasc 7)
(pasc 8)
(pasc 9)
(pasc 10)